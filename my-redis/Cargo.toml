[package]
name = "my-redis"
version = "0.1.0"
authors = ["Fuyang Liu <fuyangl@spotify.com>"]
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
tokio = { version = "0.3", features = ["full"] }
mini-redis-fuyang = { path = "../mini-redis-fuyang" }
mini-redis = "0.3"
bytes = "0.6"
futures = "0.3"
crossbeam = "0.7" #  Wakers must be Send and Sync, so we use the channel from the crossbeam crate, as the standard library channel is not Sync.

# The Send and Sync traits are marker traits related to concurrency provided by Rust. 
# Types that can be sent to a different thread are Send. Most types are Send, but something like Rc is not. 
# Types that can be concurrently accessed through immutable references are Sync.
# A type can be Send but not Sync â€” a good example is Cell, which can be modified through an immutable reference, 
# and is thus not safe to access concurrently.
# For details see: https://doc.rust-lang.org/book/ch16-04-extensible-concurrency-sync-and-send.html